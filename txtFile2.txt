Sana@MyPC MINGW64 ~/Desktop/HomeWork
$ git init
Initialized empty Git repository in C:/Users/Sana/Desktop/HomeWork/.git/

Sana@MyPC MINGW64 ~/Desktop/HomeWork (master)
$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        txtFile1.txt

nothing added to commit but untracked files present (use "git add" to track)

Sana@MyPC MINGW64 ~/Desktop/HomeWork (master)
$ git add .
warning: LF will be replaced by CRLF in txtFile1.txt.
The file will have its original line endings in your working directory

Sana@MyPC MINGW64 ~/Desktop/HomeWork (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   txtFile1.txt


Sana@MyPC MINGW64 ~/Desktop/HomeWork (master)
$ git commit -m "First version"
[master (root-commit) 31963f7] First version
 1 file changed, 77 insertions(+)
 create mode 100644 txtFile1.txt

Sana@MyPC MINGW64 ~/Desktop/HomeWork (master)
$ git status
On branch master
nothing to commit, working tree clean

Sana@MyPC MINGW64 ~/Desktop/HomeWork (master)
$ git status
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        txtFile2.txt

nothing added to commit but untracked files present (use "git add" to track)

Sana@MyPC MINGW64 ~/Desktop/HomeWork (master)
$ git add .
warning: LF will be replaced by CRLF in txtFile2.txt.
The file will have its original line endings in your working directory

Sana@MyPC MINGW64 ~/Desktop/HomeWork (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   txtFile2.txt


Sana@MyPC MINGW64 ~/Desktop/HomeWork (master)
$ git commit -m "Second version"
[master 9ec3821] Second version
 1 file changed, 42 insertions(+)
 create mode 100644 txtFile2.txt

Sana@MyPC MINGW64 ~/Desktop/HomeWork (master)
$ git status
On branch master
nothing to commit, working tree clean

Sana@MyPC MINGW64 ~/Desktop/HomeWork (master)
$ nano txtFile1.txt

Sana@MyPC MINGW64 ~/Desktop/HomeWork (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   txtFile1.txt

no changes added to commit (use "git add" and/or "git commit -a")

Sana@MyPC MINGW64 ~/Desktop/HomeWork (master)
$ git add .
warning: LF will be replaced by CRLF in txtFile1.txt.
The file will have its original line endings in your working directory

Sana@MyPC MINGW64 ~/Desktop/HomeWork (master)
$ git status

On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   txtFile1.txt

Sana@MyPC MINGW64 ~/Desktop/HomeWork (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   txtFile1.txt

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   txtFile2.txt


Sana@MyPC MINGW64 ~/Desktop/HomeWork (master)
$ git add txtFile2.txt
warning: LF will be replaced by CRLF in txtFile2.txt.
The file will have its original line endings in your working directory

Sana@MyPC MINGW64 ~/Desktop/HomeWork (master)
$ git status

On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   txtFile1.txt
        modified:   txtFile2.txt

